
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDALSOORELSEleftNOTleftLESSMOREEQUALNOTEQUALLESSEMOREEleftCONCleftINleftPLUSMINUSleftTIMESDIVIDEMODDIVrightEXPleftPOUNDleftLPARENRPARENANDALSO COMMA CONC DIV DIVIDE ELSE EQUAL EQUALS EXP FALSE FUN ID IF IN LBRACKET LESS LESSE LPAREN L_CURLY MINUS MOD MORE MOREE NOT NOTEQUAL NUMBER ORELSE PLUS POUND PRINT RBRACKET RPAREN R_CURLY SEMI STRING TIMES TRUE WHILE\n    program : functions block\n    \n    function : FUN ID LPAREN series RPAREN EQUALS result\n    \n    functions : function\n    \n    functions : functions function\n    result : block expression SEMI\n     block : L_CURLY statement_list R_CURLY\n            | L_CURLY block R_CURLY\n            | L_CURLY R_CURLY\n    statement : block\n    statement : IF LPAREN expression RPAREN block\n    \n    statement : IF LPAREN expression RPAREN block ELSE block\n    \n    statement : WHILE LPAREN expression RPAREN block\n    \n     statement_list : statement_list statement\n    \n    statement_list : statement\n    \n    statement : PRINT LPAREN expression RPAREN SEMI\n    \n    FUNCALLED : ID LPAREN series RPAREN %prec POUND\n    \n    statement : ID EQUALS expression SEMI\n              | ID EQUALS FUNCALLED SEMI\n    statement : FUNCALLED SEMIstatement : ID LBRACKET expression RBRACKET EQUALS expression SEMIstatement : ID LBRACKET expression RBRACKET LBRACKET expression RBRACKET EQUALS expression SEMI\n    expression : LPAREN expression RPAREN\n    factor : ID\n    expression : POUND expression expression\n    \n    expression : list LBRACKET factor RBRACKET\n               | ID LBRACKET factor RBRACKET\n    \n    expression : list\n    \n    expression : tuple\n    \n    series : series COMMA expression\n            | expression\n    \n    list : LBRACKET series RBRACKET\n        | LBRACKET RBRACKET\n    \n    tuple : LPAREN series RPAREN\n        | LPAREN RPAREN\n    expression : NOT expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression EXP expression\n                  | expression MOD expression\n                  | expression DIV expression\n                  | expression IN expression\n                  | expression CONC expression\n                  | expression LESS expression\n                  | expression MORE expression\n                  | expression EQUAL expression\n                  | expression NOTEQUAL expression\n                  | expression LESSE expression\n                  | expression MOREE expression\n                  | expression ANDALSO expression\n                  | expression ORELSE expression\n    expression : factorfactor : NUMBERfactor : FUNCALLEDexpression : TRUE\n                  | FALSE factor : MINUS NUMBERfactor : STRING'
    
_lr_action_items = {'FUN':([0,2,3,6,123,134,],[4,4,-3,-4,-2,-5,]),'$end':([1,5,10,19,22,],[0,-1,-8,-6,-7,]),'L_CURLY':([2,3,6,7,9,10,11,12,19,20,21,22,29,83,84,86,87,94,117,118,119,123,127,131,133,134,137,],[7,-3,-4,7,7,-8,-9,-14,-6,-13,-9,-7,-19,7,7,-17,-18,7,-10,-12,-15,-2,7,-11,-20,-5,-21,]),'ID':([4,7,9,10,11,12,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,36,37,38,39,41,42,43,44,45,54,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,86,87,89,92,93,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,124,125,126,131,133,135,137,],[8,16,16,-8,-9,-14,30,-6,-13,-9,-7,30,30,30,49,30,30,-19,-23,30,30,-27,30,-53,-28,30,-56,-57,-54,-55,-59,90,-34,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,90,-32,-35,-58,-17,-18,-16,-22,-33,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-24,30,-31,-10,-12,-15,30,30,-26,30,-54,-25,-11,-20,30,-21,]),'R_CURLY':([7,9,10,11,12,19,20,21,22,29,86,87,117,118,119,131,133,137,],[10,19,-8,22,-14,-6,-13,-9,-7,-19,-17,-18,-10,-12,-15,-11,-20,-21,]),'IF':([7,9,10,11,12,19,20,21,22,29,86,87,117,118,119,131,133,137,],[13,13,-8,-9,-14,-6,-13,-9,-7,-19,-17,-18,-10,-12,-15,-11,-20,-21,]),'WHILE':([7,9,10,11,12,19,20,21,22,29,86,87,117,118,119,131,133,137,],[14,14,-8,-9,-14,-6,-13,-9,-7,-19,-17,-18,-10,-12,-15,-11,-20,-21,]),'PRINT':([7,9,10,11,12,19,20,21,22,29,86,87,117,118,119,131,133,137,],[15,15,-8,-9,-14,-6,-13,-9,-7,-19,-17,-18,-10,-12,-15,-11,-20,-21,]),'LPAREN':([8,10,13,14,15,16,18,19,22,23,24,25,26,27,28,30,31,34,35,36,37,38,39,41,42,43,44,45,49,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,89,90,92,93,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,120,121,122,124,125,126,135,],[18,-8,23,24,25,28,31,-6,-7,31,31,31,31,31,31,28,31,31,-27,31,-53,-28,31,-56,-57,-54,-55,-59,28,-34,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-32,-35,-58,-16,28,-22,-33,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-24,31,-31,31,31,-26,31,-54,-25,31,]),'ELSE':([10,19,22,117,],[-8,-6,-7,127,]),'POUND':([10,18,19,22,23,24,25,26,27,28,30,31,34,35,36,37,38,39,41,42,43,44,45,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,89,92,93,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,120,121,122,124,125,126,135,],[-8,34,-6,-7,34,34,34,34,34,34,-23,34,34,-27,34,-53,-28,34,-56,-57,-54,-55,-59,-34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-32,-35,-58,-16,-22,-33,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-24,34,-31,34,34,-26,34,-54,-25,34,]),'NOT':([10,18,19,22,23,24,25,26,27,28,30,31,34,35,36,37,38,39,41,42,43,44,45,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,89,92,93,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,120,121,122,124,125,126,135,],[-8,39,-6,-7,39,39,39,39,39,39,-23,39,39,-27,39,-53,-28,39,-56,-57,-54,-55,-59,-34,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-32,-35,-58,-16,-22,-33,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-24,39,-31,39,39,-26,39,-54,-25,39,]),'TRUE':([10,18,19,22,23,24,25,26,27,28,30,31,34,35,36,37,38,39,41,42,43,44,45,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,89,92,93,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,120,121,122,124,125,126,135,],[-8,41,-6,-7,41,41,41,41,41,41,-23,41,41,-27,41,-53,-28,41,-56,-57,-54,-55,-59,-34,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-32,-35,-58,-16,-22,-33,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-24,41,-31,41,41,-26,41,-54,-25,41,]),'FALSE':([10,18,19,22,23,24,25,26,27,28,30,31,34,35,36,37,38,39,41,42,43,44,45,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,89,92,93,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,120,121,122,124,125,126,135,],[-8,42,-6,-7,42,42,42,42,42,42,-23,42,42,-27,42,-53,-28,42,-56,-57,-54,-55,-59,-34,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-32,-35,-58,-16,-22,-33,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-24,42,-31,42,42,-26,42,-54,-25,42,]),'LBRACKET':([10,16,18,19,22,23,24,25,26,27,28,30,31,34,35,36,37,38,39,41,42,43,44,45,49,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,88,89,92,93,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,120,121,122,124,125,126,135,],[-8,27,36,-6,-7,36,36,36,36,36,36,54,36,36,78,36,-53,-28,36,-56,-57,-54,-55,-59,54,-34,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-32,-35,-58,120,-16,-22,-33,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-24,36,-31,36,36,-26,36,-54,-25,36,]),'NUMBER':([10,18,19,22,23,24,25,26,27,28,30,31,34,35,36,37,38,39,40,41,42,43,44,45,54,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,89,92,93,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,120,121,122,124,125,126,135,],[-8,43,-6,-7,43,43,43,43,43,43,-23,43,43,-27,43,-53,-28,43,82,-56,-57,-54,-55,-59,43,-34,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-32,-35,-58,-16,-22,-33,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-24,125,-31,43,43,-26,43,-54,-25,43,]),'MINUS':([10,18,19,22,23,24,25,26,27,28,30,31,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,89,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,120,121,122,124,125,126,128,129,130,135,136,],[-8,40,-6,-7,40,40,40,40,40,40,-23,40,61,40,-27,40,-53,-28,40,-56,-57,-54,-55,-59,61,61,61,-23,61,-55,61,40,61,-34,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,114,40,-32,61,-58,-16,-22,-33,61,-36,-37,-38,-39,-40,-41,-42,61,61,61,61,61,61,61,61,61,61,-24,40,-31,40,40,-26,40,-54,-25,61,61,61,40,61,]),'STRING':([10,18,19,22,23,24,25,26,27,28,30,31,34,35,36,37,38,39,41,42,43,44,45,54,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,89,92,93,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,120,121,122,124,125,126,135,],[-8,45,-6,-7,45,45,45,45,45,45,-23,45,45,-27,45,-53,-28,45,-56,-57,-54,-55,-59,45,-34,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-32,-35,-58,-16,-22,-33,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-24,45,-31,45,45,-26,45,-54,-25,45,]),'EQUALS':([16,58,88,132,],[26,94,121,135,]),'SEMI':([17,30,35,37,38,41,42,43,44,45,49,50,51,56,80,81,82,85,89,92,93,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,116,122,125,126,129,130,136,],[29,-23,-27,-53,-28,-56,-57,-54,-55,-59,-23,86,87,-34,-32,-35,-58,119,-16,-22,-33,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-24,-31,-26,-54,-25,133,134,137,]),'PLUS':([30,33,35,37,38,41,42,43,44,45,46,47,48,49,50,51,52,55,56,77,80,81,82,89,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,116,122,125,126,128,129,130,136,],[-23,60,-27,-53,-28,-56,-57,-54,-55,-59,60,60,60,-23,60,-55,60,60,-34,60,-32,60,-58,-16,-22,-33,60,-36,-37,-38,-39,-40,-41,-42,60,60,60,60,60,60,60,60,60,60,-24,-31,-26,-54,-25,60,60,60,60,]),'TIMES':([30,33,35,37,38,41,42,43,44,45,46,47,48,49,50,51,52,55,56,77,80,81,82,89,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,116,122,125,126,128,129,130,136,],[-23,62,-27,-53,-28,-56,-57,-54,-55,-59,62,62,62,-23,62,-55,62,62,-34,62,-32,62,-58,-16,-22,-33,62,62,62,-38,-39,-40,-41,-42,62,62,62,62,62,62,62,62,62,62,-24,-31,-26,-54,-25,62,62,62,62,]),'DIVIDE':([30,33,35,37,38,41,42,43,44,45,46,47,48,49,50,51,52,55,56,77,80,81,82,89,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,116,122,125,126,128,129,130,136,],[-23,63,-27,-53,-28,-56,-57,-54,-55,-59,63,63,63,-23,63,-55,63,63,-34,63,-32,63,-58,-16,-22,-33,63,63,63,-38,-39,-40,-41,-42,63,63,63,63,63,63,63,63,63,63,-24,-31,-26,-54,-25,63,63,63,63,]),'EXP':([30,33,35,37,38,41,42,43,44,45,46,47,48,49,50,51,52,55,56,77,80,81,82,89,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,116,122,125,126,128,129,130,136,],[-23,64,-27,-53,-28,-56,-57,-54,-55,-59,64,64,64,-23,64,-55,64,64,-34,64,-32,64,-58,-16,-22,-33,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-24,-31,-26,-54,-25,64,64,64,64,]),'MOD':([30,33,35,37,38,41,42,43,44,45,46,47,48,49,50,51,52,55,56,77,80,81,82,89,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,116,122,125,126,128,129,130,136,],[-23,65,-27,-53,-28,-56,-57,-54,-55,-59,65,65,65,-23,65,-55,65,65,-34,65,-32,65,-58,-16,-22,-33,65,65,65,-38,-39,-40,-41,-42,65,65,65,65,65,65,65,65,65,65,-24,-31,-26,-54,-25,65,65,65,65,]),'DIV':([30,33,35,37,38,41,42,43,44,45,46,47,48,49,50,51,52,55,56,77,80,81,82,89,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,116,122,125,126,128,129,130,136,],[-23,66,-27,-53,-28,-56,-57,-54,-55,-59,66,66,66,-23,66,-55,66,66,-34,66,-32,66,-58,-16,-22,-33,66,66,66,-38,-39,-40,-41,-42,66,66,66,66,66,66,66,66,66,66,-24,-31,-26,-54,-25,66,66,66,66,]),'IN':([30,33,35,37,38,41,42,43,44,45,46,47,48,49,50,51,52,55,56,77,80,81,82,89,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,116,122,125,126,128,129,130,136,],[-23,67,-27,-53,-28,-56,-57,-54,-55,-59,67,67,67,-23,67,-55,67,67,-34,67,-32,67,-58,-16,-22,-33,67,-36,-37,-38,-39,-40,-41,-42,-43,67,67,67,67,67,67,67,67,67,-24,-31,-26,-54,-25,67,67,67,67,]),'CONC':([30,33,35,37,38,41,42,43,44,45,46,47,48,49,50,51,52,55,56,77,80,81,82,89,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,116,122,125,126,128,129,130,136,],[-23,68,-27,-53,-28,-56,-57,-54,-55,-59,68,68,68,-23,68,-55,68,68,-34,68,-32,68,-58,-16,-22,-33,68,-36,-37,-38,-39,-40,-41,-42,-43,-44,68,68,68,68,68,68,68,68,-24,-31,-26,-54,-25,68,68,68,68,]),'LESS':([30,33,35,37,38,41,42,43,44,45,46,47,48,49,50,51,52,55,56,77,80,81,82,89,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,116,122,125,126,128,129,130,136,],[-23,69,-27,-53,-28,-56,-57,-54,-55,-59,69,69,69,-23,69,-55,69,69,-34,69,-32,69,-58,-16,-22,-33,69,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,69,69,-24,-31,-26,-54,-25,69,69,69,69,]),'MORE':([30,33,35,37,38,41,42,43,44,45,46,47,48,49,50,51,52,55,56,77,80,81,82,89,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,116,122,125,126,128,129,130,136,],[-23,70,-27,-53,-28,-56,-57,-54,-55,-59,70,70,70,-23,70,-55,70,70,-34,70,-32,70,-58,-16,-22,-33,70,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,70,70,-24,-31,-26,-54,-25,70,70,70,70,]),'EQUAL':([30,33,35,37,38,41,42,43,44,45,46,47,48,49,50,51,52,55,56,77,80,81,82,89,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,116,122,125,126,128,129,130,136,],[-23,71,-27,-53,-28,-56,-57,-54,-55,-59,71,71,71,-23,71,-55,71,71,-34,71,-32,71,-58,-16,-22,-33,71,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,71,71,-24,-31,-26,-54,-25,71,71,71,71,]),'NOTEQUAL':([30,33,35,37,38,41,42,43,44,45,46,47,48,49,50,51,52,55,56,77,80,81,82,89,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,116,122,125,126,128,129,130,136,],[-23,72,-27,-53,-28,-56,-57,-54,-55,-59,72,72,72,-23,72,-55,72,72,-34,72,-32,72,-58,-16,-22,-33,72,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,72,72,-24,-31,-26,-54,-25,72,72,72,72,]),'LESSE':([30,33,35,37,38,41,42,43,44,45,46,47,48,49,50,51,52,55,56,77,80,81,82,89,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,116,122,125,126,128,129,130,136,],[-23,73,-27,-53,-28,-56,-57,-54,-55,-59,73,73,73,-23,73,-55,73,73,-34,73,-32,73,-58,-16,-22,-33,73,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,73,73,-24,-31,-26,-54,-25,73,73,73,73,]),'MOREE':([30,33,35,37,38,41,42,43,44,45,46,47,48,49,50,51,52,55,56,77,80,81,82,89,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,116,122,125,126,128,129,130,136,],[-23,74,-27,-53,-28,-56,-57,-54,-55,-59,74,74,74,-23,74,-55,74,74,-34,74,-32,74,-58,-16,-22,-33,74,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,74,74,-24,-31,-26,-54,-25,74,74,74,74,]),'ANDALSO':([30,33,35,37,38,41,42,43,44,45,46,47,48,49,50,51,52,55,56,77,80,81,82,89,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,116,122,125,126,128,129,130,136,],[-23,75,-27,-53,-28,-56,-57,-54,-55,-59,75,75,75,-23,75,-55,75,75,-34,75,-32,-35,-58,-16,-22,-33,75,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-24,-31,-26,-54,-25,75,75,75,75,]),'ORELSE':([30,33,35,37,38,41,42,43,44,45,46,47,48,49,50,51,52,55,56,77,80,81,82,89,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,116,122,125,126,128,129,130,136,],[-23,76,-27,-53,-28,-56,-57,-54,-55,-59,76,76,76,-23,76,-55,76,76,-34,76,-32,-35,-58,-16,-22,-33,76,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-24,-31,-26,-54,-25,76,76,76,76,]),'RPAREN':([30,31,32,33,35,37,38,41,42,43,44,45,46,47,48,53,55,56,57,80,81,82,89,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,116,122,125,126,],[-23,56,58,-30,-27,-53,-28,-56,-57,-54,-55,-59,83,84,85,89,92,-34,93,-32,-35,-58,-16,-22,-33,-29,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-24,-31,-26,-54,-25,]),'COMMA':([30,32,33,35,37,38,41,42,43,44,45,53,55,56,57,79,80,81,82,89,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,116,122,125,126,],[-23,59,-30,-27,-53,-28,-56,-57,-54,-55,-59,59,-30,-34,59,59,-32,-35,-58,-16,-22,-33,-29,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-24,-31,-26,-54,-25,]),'RBRACKET':([30,33,35,36,37,38,41,42,43,44,45,52,56,79,80,81,82,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,122,125,126,128,],[-23,-30,-27,80,-53,-28,-56,-57,-54,-55,-59,88,-34,116,-32,-35,-58,-16,-23,122,-22,-33,-29,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-24,126,-31,-26,-54,-25,132,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'functions':([0,],[2,]),'function':([0,2,],[3,6,]),'block':([2,7,9,83,84,94,127,],[5,11,21,117,118,124,131,]),'statement_list':([7,],[9,]),'statement':([7,9,],[12,20,]),'FUNCALLED':([7,9,18,23,24,25,26,27,28,31,34,36,39,54,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,114,120,121,124,135,],[17,17,44,44,44,44,51,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'series':([18,28,31,36,],[32,53,57,79,]),'expression':([18,23,24,25,26,27,28,31,34,36,39,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,114,120,121,124,135,],[33,46,47,48,50,52,33,55,77,33,81,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,97,128,129,130,136,]),'list':([18,23,24,25,26,27,28,31,34,36,39,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,114,120,121,124,135,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'factor':([18,23,24,25,26,27,28,31,34,36,39,54,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,114,120,121,124,135,],[37,37,37,37,37,37,37,37,37,37,37,91,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,115,37,37,37,37,37,]),'tuple':([18,23,24,25,26,27,28,31,34,36,39,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,114,120,121,124,135,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'result':([94,],[123,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> functions block','program',2,'p_program','sbml.py',653),
  ('function -> FUN ID LPAREN series RPAREN EQUALS result','function',7,'p_fun','sbml.py',660),
  ('functions -> function','functions',1,'p_func_list_val','sbml.py',670),
  ('functions -> functions function','functions',2,'p_func_list','sbml.py',677),
  ('result -> block expression SEMI','result',3,'p_result','sbml.py',683),
  ('block -> L_CURLY statement_list R_CURLY','block',3,'p_block','sbml.py',689),
  ('block -> L_CURLY block R_CURLY','block',3,'p_block','sbml.py',690),
  ('block -> L_CURLY R_CURLY','block',2,'p_block','sbml.py',691),
  ('statement -> block','statement',1,'p_statement_block','sbml.py',702),
  ('statement -> IF LPAREN expression RPAREN block','statement',5,'p_statement_if','sbml.py',708),
  ('statement -> IF LPAREN expression RPAREN block ELSE block','statement',7,'p_statement_if_else','sbml.py',716),
  ('statement -> WHILE LPAREN expression RPAREN block','statement',5,'p_statement_while','sbml.py',723),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','sbml.py',730),
  ('statement_list -> statement','statement_list',1,'p_statement_list_val','sbml.py',737),
  ('statement -> PRINT LPAREN expression RPAREN SEMI','statement',5,'p_print_smt','sbml.py',744),
  ('FUNCALLED -> ID LPAREN series RPAREN','FUNCALLED',4,'p_statement_func_called','sbml.py',751),
  ('statement -> ID EQUALS expression SEMI','statement',4,'p_statement_assign','sbml.py',758),
  ('statement -> ID EQUALS FUNCALLED SEMI','statement',4,'p_statement_assign','sbml.py',759),
  ('statement -> FUNCALLED SEMI','statement',2,'p_statement_funcalled','sbml.py',765),
  ('statement -> ID LBRACKET expression RBRACKET EQUALS expression SEMI','statement',7,'p_statement_list_assign','sbml.py',770),
  ('statement -> ID LBRACKET expression RBRACKET LBRACKET expression RBRACKET EQUALS expression SEMI','statement',10,'p_statement_list_double_assign','sbml.py',775),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','sbml.py',781),
  ('factor -> ID','factor',1,'p_expression_id','sbml.py',788),
  ('expression -> POUND expression expression','expression',3,'p_expression_pond','sbml.py',798),
  ('expression -> list LBRACKET factor RBRACKET','expression',4,'p_expression_index','sbml.py',805),
  ('expression -> ID LBRACKET factor RBRACKET','expression',4,'p_expression_index','sbml.py',806),
  ('expression -> list','expression',1,'p_expression_list','sbml.py',817),
  ('expression -> tuple','expression',1,'p_expression_tuple','sbml.py',824),
  ('series -> series COMMA expression','series',3,'p_expression_series','sbml.py',831),
  ('series -> expression','series',1,'p_expression_series','sbml.py',832),
  ('list -> LBRACKET series RBRACKET','list',3,'p_expression_create_list','sbml.py',846),
  ('list -> LBRACKET RBRACKET','list',2,'p_expression_create_list','sbml.py',847),
  ('tuple -> LPAREN series RPAREN','tuple',3,'p_expression_create_tuple','sbml.py',860),
  ('tuple -> LPAREN RPAREN','tuple',2,'p_expression_create_tuple','sbml.py',861),
  ('expression -> NOT expression','expression',2,'p_expression_notop','sbml.py',873),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','sbml.py',878),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','sbml.py',879),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','sbml.py',880),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','sbml.py',881),
  ('expression -> expression EXP expression','expression',3,'p_expression_binop','sbml.py',882),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop','sbml.py',883),
  ('expression -> expression DIV expression','expression',3,'p_expression_binop','sbml.py',884),
  ('expression -> expression IN expression','expression',3,'p_expression_binop','sbml.py',885),
  ('expression -> expression CONC expression','expression',3,'p_expression_binop','sbml.py',886),
  ('expression -> expression LESS expression','expression',3,'p_expression_binop','sbml.py',887),
  ('expression -> expression MORE expression','expression',3,'p_expression_binop','sbml.py',888),
  ('expression -> expression EQUAL expression','expression',3,'p_expression_binop','sbml.py',889),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression_binop','sbml.py',890),
  ('expression -> expression LESSE expression','expression',3,'p_expression_binop','sbml.py',891),
  ('expression -> expression MOREE expression','expression',3,'p_expression_binop','sbml.py',892),
  ('expression -> expression ANDALSO expression','expression',3,'p_expression_binop','sbml.py',893),
  ('expression -> expression ORELSE expression','expression',3,'p_expression_binop','sbml.py',894),
  ('expression -> factor','expression',1,'p_expression_factor','sbml.py',900),
  ('factor -> NUMBER','factor',1,'p_expression_number','sbml.py',905),
  ('factor -> FUNCALLED','factor',1,'p_expression_func','sbml.py',910),
  ('expression -> TRUE','expression',1,'p_expression_boolean','sbml.py',915),
  ('expression -> FALSE','expression',1,'p_expression_boolean','sbml.py',916),
  ('factor -> MINUS NUMBER','factor',2,'p_expression_negative','sbml.py',921),
  ('factor -> STRING','factor',1,'p_expression_string','sbml.py',927),
]
